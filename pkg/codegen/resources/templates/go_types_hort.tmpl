package {{ .PackageName }}

{{- if isTimeImportNeeded }}
import "time"
{{ end -}}

{{- range $index, $type := .Schema.IntEnums }}

type {{ $type.Name }} int
const (
{{- range $indexVal, $val := $type.Values }}
  {{- if eq $indexVal 0 }}
    {{ upperFirstCase $type.Name }}_{{ $val }} {{ $type.Name }} = iota
  {{- else }}
    {{ upperFirstCase $type.Name }}{{ $val }}
  {{- end }}
{{- end }}
)
{{ end -}}

{{- range $index, $type := .Schema.StringEnums }}

type {{ $type.Name }} string
const (
{{- range $type.Values }}
	{{ upperFirstCase $type.Name }}{{ . }} {{ $type.Name }} = "{{ . }}"
{{- end }}
)
{{- end }}

{{ range $index, $type := .Schema.ComplexTypes -}}
type {{ $type.Name }} struct {
{{- if typeHasTag $type "hort.main-type" }}

  Id_ int64 // Storage Primary Key
{{- end }}
{{ range $type.Properties }}
	{{ upperFirstCase .Name }} {{ getGolangType .Name .ValueType }}
{{ end }}
}

{{ end }}

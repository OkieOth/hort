syntax = "proto3";

package person;

option go_package = "github.com/okieoth/hort/examples/crud";

import "google/protobuf/timestamp.proto";

// Subtypes
message Name {
  string first = 1;
  string middle = 2;
  string last = 3;
}

message Address {
  string street = 1;
  string city = 2;
  string postalCode = 3;
  string country = 4;
}

message Contact {
  string email = 1;
  string phone = 2;
  Address address = 3;
}

enum Role {
  ROLE_UNSPECIFIED = 0;
  ADMIN = 1;
  EDITOR = 2;
  VIEWER = 3;
}

enum IEnum {
  IENUM_UNSPECIFIED = 0;
  VALUE_1 = 1;
  VALUE_2 = 2;
  VALUE_4 = 4;
  VALUE_8 = 8;
  VALUE_16 = 16;
}

// Main Person entity
message Person {
  string id = 1; // UUID
  Name name = 2;
  int32 age = 3;
  Contact contact = 4;
  repeated Role roles = 5;
  bool is_active = 6;
  google.protobuf.Timestamp created_at = 7;
  IEnum ienum = 8;
}

// CRUD request/response messages
message CreatePersonRequest {
  Person person = 1;
}
message CreatePersonResponse {
  Person person = 1;
}

message GetPersonRequest {
  string id = 1;
}
message GetPersonResponse {
  Person person = 1;
}

message UpdatePersonRequest {
  Person person = 1;
}
message UpdatePersonResponse {
  Person person = 1;
}

message DeletePersonRequest {
  string id = 1;
}
message DeletePersonResponse {
  bool success = 1;
}

message ListPersonsRequest {
  int32 page_size = 1;
  string page_token = 2;
}
message ListPersonsResponse {
  repeated Person persons = 1;
  string next_page_token = 2;
}

// PersonService with basic CRUD
service PersonService {
  rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse);
  rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);
  rpc UpdatePerson(UpdatePersonRequest) returns (UpdatePersonResponse);
  rpc DeletePerson(DeletePersonRequest) returns (DeletePersonResponse);
  rpc ListPersons(ListPersonsRequest) returns (ListPersonsResponse);
}
